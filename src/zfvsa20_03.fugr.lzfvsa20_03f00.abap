*---------------------------------------------------------------------*
*    view related FORM routines
*---------------------------------------------------------------------*
*...processing: ZVSA20SAPLANE...................................*
FORM GET_DATA_ZVSA20SAPLANE.
  PERFORM VIM_FILL_WHERETAB.
*.read data from database.............................................*
  REFRESH TOTAL.
  CLEAR   TOTAL.
  SELECT * FROM ZTSAPLANE_A20 WHERE
(VIM_WHERETAB) .
    CLEAR ZVSA20SAPLANE .
ZVSA20SAPLANE-MANDT =
ZTSAPLANE_A20-MANDT .
ZVSA20SAPLANE-PLANETYPE =
ZTSAPLANE_A20-PLANETYPE .
ZVSA20SAPLANE-SEATSMAX =
ZTSAPLANE_A20-SEATSMAX .
ZVSA20SAPLANE-CONSUM =
ZTSAPLANE_A20-CONSUM .
ZVSA20SAPLANE-CON_UNIT =
ZTSAPLANE_A20-CON_UNIT .
ZVSA20SAPLANE-TANKCAP =
ZTSAPLANE_A20-TANKCAP .
ZVSA20SAPLANE-CAP_UNIT =
ZTSAPLANE_A20-CAP_UNIT .
ZVSA20SAPLANE-WEIGHT =
ZTSAPLANE_A20-WEIGHT .
ZVSA20SAPLANE-WEI_UNIT =
ZTSAPLANE_A20-WEI_UNIT .
ZVSA20SAPLANE-SPAN =
ZTSAPLANE_A20-SPAN .
ZVSA20SAPLANE-SPAN_UNIT =
ZTSAPLANE_A20-SPAN_UNIT .
ZVSA20SAPLANE-LENG =
ZTSAPLANE_A20-LENG .
ZVSA20SAPLANE-LENG_UNIT =
ZTSAPLANE_A20-LENG_UNIT .
ZVSA20SAPLANE-OP_SPEED =
ZTSAPLANE_A20-OP_SPEED .
ZVSA20SAPLANE-SPEED_UNIT =
ZTSAPLANE_A20-SPEED_UNIT .
ZVSA20SAPLANE-PRODUCER =
ZTSAPLANE_A20-PRODUCER .
ZVSA20SAPLANE-SEATSMAX_B =
ZTSAPLANE_A20-SEATSMAX_B .
ZVSA20SAPLANE-SEATSMAX_F =
ZTSAPLANE_A20-SEATSMAX_F .
<VIM_TOTAL_STRUC> = ZVSA20SAPLANE.
    APPEND TOTAL.
  ENDSELECT.
  SORT TOTAL BY <VIM_XTOTAL_KEY>.
  <STATUS>-ALR_SORTED = 'R'.
*.check dynamic selectoptions (not in DDIC)...........................*
  IF X_HEADER-SELECTION NE SPACE.
    PERFORM CHECK_DYNAMIC_SELECT_OPTIONS.
  ELSEIF X_HEADER-DELMDTFLAG NE SPACE.
    PERFORM BUILD_MAINKEY_TAB.
  ENDIF.
  REFRESH EXTRACT.
ENDFORM.
*---------------------------------------------------------------------*
FORM DB_UPD_ZVSA20SAPLANE .
*.process data base updates/inserts/deletes.........................*
LOOP AT TOTAL.
  CHECK <ACTION> NE ORIGINAL.
MOVE <VIM_TOTAL_STRUC> TO ZVSA20SAPLANE.
  IF <ACTION> = UPDATE_GELOESCHT.
    <ACTION> = GELOESCHT.
  ENDIF.
  CASE <ACTION>.
   WHEN NEUER_GELOESCHT.
IF STATUS_ZVSA20SAPLANE-ST_DELETE EQ GELOESCHT.
     READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
     IF SY-SUBRC EQ 0.
       DELETE EXTRACT INDEX SY-TABIX.
     ENDIF.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN GELOESCHT.
  SELECT SINGLE FOR UPDATE * FROM ZTSAPLANE_A20 WHERE
  PLANETYPE = ZVSA20SAPLANE-PLANETYPE .
    IF SY-SUBRC = 0.
    DELETE ZTSAPLANE_A20 .
    ENDIF.
    IF STATUS-DELETE EQ GELOESCHT.
      READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY> BINARY SEARCH.
      DELETE EXTRACT INDEX SY-TABIX.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN OTHERS.
  SELECT SINGLE FOR UPDATE * FROM ZTSAPLANE_A20 WHERE
  PLANETYPE = ZVSA20SAPLANE-PLANETYPE .
    IF SY-SUBRC <> 0.   "insert preprocessing: init WA
      CLEAR ZTSAPLANE_A20.
    ENDIF.
ZTSAPLANE_A20-MANDT =
ZVSA20SAPLANE-MANDT .
ZTSAPLANE_A20-PLANETYPE =
ZVSA20SAPLANE-PLANETYPE .
ZTSAPLANE_A20-SEATSMAX =
ZVSA20SAPLANE-SEATSMAX .
ZTSAPLANE_A20-CONSUM =
ZVSA20SAPLANE-CONSUM .
ZTSAPLANE_A20-CON_UNIT =
ZVSA20SAPLANE-CON_UNIT .
ZTSAPLANE_A20-TANKCAP =
ZVSA20SAPLANE-TANKCAP .
ZTSAPLANE_A20-CAP_UNIT =
ZVSA20SAPLANE-CAP_UNIT .
ZTSAPLANE_A20-WEIGHT =
ZVSA20SAPLANE-WEIGHT .
ZTSAPLANE_A20-WEI_UNIT =
ZVSA20SAPLANE-WEI_UNIT .
ZTSAPLANE_A20-SPAN =
ZVSA20SAPLANE-SPAN .
ZTSAPLANE_A20-SPAN_UNIT =
ZVSA20SAPLANE-SPAN_UNIT .
ZTSAPLANE_A20-LENG =
ZVSA20SAPLANE-LENG .
ZTSAPLANE_A20-LENG_UNIT =
ZVSA20SAPLANE-LENG_UNIT .
ZTSAPLANE_A20-OP_SPEED =
ZVSA20SAPLANE-OP_SPEED .
ZTSAPLANE_A20-SPEED_UNIT =
ZVSA20SAPLANE-SPEED_UNIT .
ZTSAPLANE_A20-PRODUCER =
ZVSA20SAPLANE-PRODUCER .
ZTSAPLANE_A20-SEATSMAX_B =
ZVSA20SAPLANE-SEATSMAX_B .
ZTSAPLANE_A20-SEATSMAX_F =
ZVSA20SAPLANE-SEATSMAX_F .
    IF SY-SUBRC = 0.
    UPDATE ZTSAPLANE_A20 ##WARN_OK.
    ELSE.
    INSERT ZTSAPLANE_A20 .
    ENDIF.
    READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
    IF SY-SUBRC EQ 0.
      <XACT> = ORIGINAL.
      MODIFY EXTRACT INDEX SY-TABIX.
    ENDIF.
    <ACTION> = ORIGINAL.
    MODIFY TOTAL.
  ENDCASE.
ENDLOOP.
CLEAR: STATUS_ZVSA20SAPLANE-UPD_FLAG,
STATUS_ZVSA20SAPLANE-UPD_CHECKD.
MESSAGE S018(SV).
ENDFORM.
*---------------------------------------------------------------------*
FORM READ_SINGLE_ZVSA20SAPLANE.
  SELECT SINGLE * FROM ZTSAPLANE_A20 WHERE
PLANETYPE = ZVSA20SAPLANE-PLANETYPE .
ZVSA20SAPLANE-MANDT =
ZTSAPLANE_A20-MANDT .
ZVSA20SAPLANE-PLANETYPE =
ZTSAPLANE_A20-PLANETYPE .
ZVSA20SAPLANE-SEATSMAX =
ZTSAPLANE_A20-SEATSMAX .
ZVSA20SAPLANE-CONSUM =
ZTSAPLANE_A20-CONSUM .
ZVSA20SAPLANE-CON_UNIT =
ZTSAPLANE_A20-CON_UNIT .
ZVSA20SAPLANE-TANKCAP =
ZTSAPLANE_A20-TANKCAP .
ZVSA20SAPLANE-CAP_UNIT =
ZTSAPLANE_A20-CAP_UNIT .
ZVSA20SAPLANE-WEIGHT =
ZTSAPLANE_A20-WEIGHT .
ZVSA20SAPLANE-WEI_UNIT =
ZTSAPLANE_A20-WEI_UNIT .
ZVSA20SAPLANE-SPAN =
ZTSAPLANE_A20-SPAN .
ZVSA20SAPLANE-SPAN_UNIT =
ZTSAPLANE_A20-SPAN_UNIT .
ZVSA20SAPLANE-LENG =
ZTSAPLANE_A20-LENG .
ZVSA20SAPLANE-LENG_UNIT =
ZTSAPLANE_A20-LENG_UNIT .
ZVSA20SAPLANE-OP_SPEED =
ZTSAPLANE_A20-OP_SPEED .
ZVSA20SAPLANE-SPEED_UNIT =
ZTSAPLANE_A20-SPEED_UNIT .
ZVSA20SAPLANE-PRODUCER =
ZTSAPLANE_A20-PRODUCER .
ZVSA20SAPLANE-SEATSMAX_B =
ZTSAPLANE_A20-SEATSMAX_B .
ZVSA20SAPLANE-SEATSMAX_F =
ZTSAPLANE_A20-SEATSMAX_F .
ENDFORM.
*---------------------------------------------------------------------*
FORM CORR_MAINT_ZVSA20SAPLANE USING VALUE(CM_ACTION) RC.
  DATA: RETCODE LIKE SY-SUBRC, COUNT TYPE I, TRSP_KEYLEN TYPE SYFLENG.
  FIELD-SYMBOLS: <TAB_KEY_X> TYPE X.
  CLEAR RC.
MOVE ZVSA20SAPLANE-PLANETYPE TO
ZTSAPLANE_A20-PLANETYPE .
MOVE ZVSA20SAPLANE-MANDT TO
ZTSAPLANE_A20-MANDT .
  CORR_KEYTAB             =  E071K.
  CORR_KEYTAB-OBJNAME     = 'ZTSAPLANE_A20'.
  IF NOT <vim_corr_keyx> IS ASSIGNED.
    ASSIGN CORR_KEYTAB-TABKEY TO <vim_corr_keyx> CASTING.
  ENDIF.
  ASSIGN ZTSAPLANE_A20 TO <TAB_KEY_X> CASTING.
  PERFORM VIM_GET_TRSPKEYLEN
    USING 'ZTSAPLANE_A20'
    CHANGING TRSP_KEYLEN.
  <VIM_CORR_KEYX>(TRSP_KEYLEN) = <TAB_KEY_X>(TRSP_KEYLEN).
  PERFORM UPDATE_CORR_KEYTAB USING CM_ACTION RETCODE.
  ADD: RETCODE TO RC, 1 TO COUNT.
  IF RC LT COUNT AND CM_ACTION NE PRUEFEN.
    CLEAR RC.
  ENDIF.

ENDFORM.
*---------------------------------------------------------------------*
*...processing: ZVSA20SCARR.....................................*
FORM GET_DATA_ZVSA20SCARR.
  PERFORM VIM_FILL_WHERETAB.
*.read data from database.............................................*
  REFRESH TOTAL.
  CLEAR   TOTAL.
  SELECT * FROM ZTSCARR_A20 WHERE
(VIM_WHERETAB) .
    CLEAR ZVSA20SCARR .
ZVSA20SCARR-MANDT =
ZTSCARR_A20-MANDT .
ZVSA20SCARR-CARRID =
ZTSCARR_A20-CARRID .
ZVSA20SCARR-CARRNAME =
ZTSCARR_A20-CARRNAME .
ZVSA20SCARR-CURRCODE =
ZTSCARR_A20-CURRCODE .
ZVSA20SCARR-URL =
ZTSCARR_A20-URL .
<VIM_TOTAL_STRUC> = ZVSA20SCARR.
    APPEND TOTAL.
  ENDSELECT.
  SORT TOTAL BY <VIM_XTOTAL_KEY>.
  <STATUS>-ALR_SORTED = 'R'.
*.check dynamic selectoptions (not in DDIC)...........................*
  IF X_HEADER-SELECTION NE SPACE.
    PERFORM CHECK_DYNAMIC_SELECT_OPTIONS.
  ELSEIF X_HEADER-DELMDTFLAG NE SPACE.
    PERFORM BUILD_MAINKEY_TAB.
  ENDIF.
  REFRESH EXTRACT.
ENDFORM.
*---------------------------------------------------------------------*
FORM DB_UPD_ZVSA20SCARR .
*.process data base updates/inserts/deletes.........................*
LOOP AT TOTAL.
  CHECK <ACTION> NE ORIGINAL.
MOVE <VIM_TOTAL_STRUC> TO ZVSA20SCARR.
  IF <ACTION> = UPDATE_GELOESCHT.
    <ACTION> = GELOESCHT.
  ENDIF.
  CASE <ACTION>.
   WHEN NEUER_GELOESCHT.
IF STATUS_ZVSA20SCARR-ST_DELETE EQ GELOESCHT.
     READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
     IF SY-SUBRC EQ 0.
       DELETE EXTRACT INDEX SY-TABIX.
     ENDIF.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN GELOESCHT.
  SELECT SINGLE FOR UPDATE * FROM ZTSCARR_A20 WHERE
  CARRID = ZVSA20SCARR-CARRID .
    IF SY-SUBRC = 0.
    DELETE ZTSCARR_A20 .
    ENDIF.
    IF STATUS-DELETE EQ GELOESCHT.
      READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY> BINARY SEARCH.
      DELETE EXTRACT INDEX SY-TABIX.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN OTHERS.
  SELECT SINGLE FOR UPDATE * FROM ZTSCARR_A20 WHERE
  CARRID = ZVSA20SCARR-CARRID .
    IF SY-SUBRC <> 0.   "insert preprocessing: init WA
      CLEAR ZTSCARR_A20.
    ENDIF.
ZTSCARR_A20-MANDT =
ZVSA20SCARR-MANDT .
ZTSCARR_A20-CARRID =
ZVSA20SCARR-CARRID .
ZTSCARR_A20-CARRNAME =
ZVSA20SCARR-CARRNAME .
ZTSCARR_A20-CURRCODE =
ZVSA20SCARR-CURRCODE .
ZTSCARR_A20-URL =
ZVSA20SCARR-URL .
    IF SY-SUBRC = 0.
    UPDATE ZTSCARR_A20 ##WARN_OK.
    ELSE.
    INSERT ZTSCARR_A20 .
    ENDIF.
    READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
    IF SY-SUBRC EQ 0.
      <XACT> = ORIGINAL.
      MODIFY EXTRACT INDEX SY-TABIX.
    ENDIF.
    <ACTION> = ORIGINAL.
    MODIFY TOTAL.
  ENDCASE.
ENDLOOP.
CLEAR: STATUS_ZVSA20SCARR-UPD_FLAG,
STATUS_ZVSA20SCARR-UPD_CHECKD.
MESSAGE S018(SV).
ENDFORM.
*---------------------------------------------------------------------*
FORM READ_SINGLE_ZVSA20SCARR.
  SELECT SINGLE * FROM ZTSCARR_A20 WHERE
CARRID = ZVSA20SCARR-CARRID .
ZVSA20SCARR-MANDT =
ZTSCARR_A20-MANDT .
ZVSA20SCARR-CARRID =
ZTSCARR_A20-CARRID .
ZVSA20SCARR-CARRNAME =
ZTSCARR_A20-CARRNAME .
ZVSA20SCARR-CURRCODE =
ZTSCARR_A20-CURRCODE .
ZVSA20SCARR-URL =
ZTSCARR_A20-URL .
ENDFORM.
*---------------------------------------------------------------------*
FORM CORR_MAINT_ZVSA20SCARR USING VALUE(CM_ACTION) RC.
  DATA: RETCODE LIKE SY-SUBRC, COUNT TYPE I, TRSP_KEYLEN TYPE SYFLENG.
  FIELD-SYMBOLS: <TAB_KEY_X> TYPE X.
  CLEAR RC.
MOVE ZVSA20SCARR-CARRID TO
ZTSCARR_A20-CARRID .
MOVE ZVSA20SCARR-MANDT TO
ZTSCARR_A20-MANDT .
  CORR_KEYTAB             =  E071K.
  CORR_KEYTAB-OBJNAME     = 'ZTSCARR_A20'.
  IF NOT <vim_corr_keyx> IS ASSIGNED.
    ASSIGN CORR_KEYTAB-TABKEY TO <vim_corr_keyx> CASTING.
  ENDIF.
  ASSIGN ZTSCARR_A20 TO <TAB_KEY_X> CASTING.
  PERFORM VIM_GET_TRSPKEYLEN
    USING 'ZTSCARR_A20'
    CHANGING TRSP_KEYLEN.
  <VIM_CORR_KEYX>(TRSP_KEYLEN) = <TAB_KEY_X>(TRSP_KEYLEN).
  PERFORM UPDATE_CORR_KEYTAB USING CM_ACTION RETCODE.
  ADD: RETCODE TO RC, 1 TO COUNT.
  IF RC LT COUNT AND CM_ACTION NE PRUEFEN.
    CLEAR RC.
  ENDIF.

ENDFORM.
*---------------------------------------------------------------------*
*...processing: ZVSA20SFLIGHT...................................*
FORM GET_DATA_ZVSA20SFLIGHT.
  PERFORM VIM_FILL_WHERETAB.
*.read data from database.............................................*
  REFRESH TOTAL.
  CLEAR   TOTAL.
  SELECT * FROM ZTSFLIGHT_A20 WHERE
(VIM_WHERETAB) .
    CLEAR ZVSA20SFLIGHT .
ZVSA20SFLIGHT-MANDT =
ZTSFLIGHT_A20-MANDT .
ZVSA20SFLIGHT-CARRID =
ZTSFLIGHT_A20-CARRID .
ZVSA20SFLIGHT-CONNID =
ZTSFLIGHT_A20-CONNID .
ZVSA20SFLIGHT-FLDATE =
ZTSFLIGHT_A20-FLDATE .
ZVSA20SFLIGHT-PRICE =
ZTSFLIGHT_A20-PRICE .
ZVSA20SFLIGHT-CURRENCY =
ZTSFLIGHT_A20-CURRENCY .
ZVSA20SFLIGHT-PLANETYPE =
ZTSFLIGHT_A20-PLANETYPE .
ZVSA20SFLIGHT-SEATSMAX =
ZTSFLIGHT_A20-SEATSMAX .
ZVSA20SFLIGHT-SEATSOCC =
ZTSFLIGHT_A20-SEATSOCC .
ZVSA20SFLIGHT-PAYMENTSUM =
ZTSFLIGHT_A20-PAYMENTSUM .
ZVSA20SFLIGHT-SEATSMAX_B =
ZTSFLIGHT_A20-SEATSMAX_B .
ZVSA20SFLIGHT-SEATSOCC_B =
ZTSFLIGHT_A20-SEATSOCC_B .
ZVSA20SFLIGHT-SEATSMAX_F =
ZTSFLIGHT_A20-SEATSMAX_F .
ZVSA20SFLIGHT-SEATSOCC_F =
ZTSFLIGHT_A20-SEATSOCC_F .
<VIM_TOTAL_STRUC> = ZVSA20SFLIGHT.
    APPEND TOTAL.
  ENDSELECT.
  SORT TOTAL BY <VIM_XTOTAL_KEY>.
  <STATUS>-ALR_SORTED = 'R'.
*.check dynamic selectoptions (not in DDIC)...........................*
  IF X_HEADER-SELECTION NE SPACE.
    PERFORM CHECK_DYNAMIC_SELECT_OPTIONS.
  ELSEIF X_HEADER-DELMDTFLAG NE SPACE.
    PERFORM BUILD_MAINKEY_TAB.
  ENDIF.
  REFRESH EXTRACT.
ENDFORM.
*---------------------------------------------------------------------*
FORM DB_UPD_ZVSA20SFLIGHT .
*.process data base updates/inserts/deletes.........................*
LOOP AT TOTAL.
  CHECK <ACTION> NE ORIGINAL.
MOVE <VIM_TOTAL_STRUC> TO ZVSA20SFLIGHT.
  IF <ACTION> = UPDATE_GELOESCHT.
    <ACTION> = GELOESCHT.
  ENDIF.
  CASE <ACTION>.
   WHEN NEUER_GELOESCHT.
IF STATUS_ZVSA20SFLIGHT-ST_DELETE EQ GELOESCHT.
     READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
     IF SY-SUBRC EQ 0.
       DELETE EXTRACT INDEX SY-TABIX.
     ENDIF.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN GELOESCHT.
  SELECT SINGLE FOR UPDATE * FROM ZTSFLIGHT_A20 WHERE
  CARRID = ZVSA20SFLIGHT-CARRID AND
  CONNID = ZVSA20SFLIGHT-CONNID AND
  FLDATE = ZVSA20SFLIGHT-FLDATE .
    IF SY-SUBRC = 0.
    DELETE ZTSFLIGHT_A20 .
    ENDIF.
    IF STATUS-DELETE EQ GELOESCHT.
      READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY> BINARY SEARCH.
      DELETE EXTRACT INDEX SY-TABIX.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN OTHERS.
  SELECT SINGLE FOR UPDATE * FROM ZTSFLIGHT_A20 WHERE
  CARRID = ZVSA20SFLIGHT-CARRID AND
  CONNID = ZVSA20SFLIGHT-CONNID AND
  FLDATE = ZVSA20SFLIGHT-FLDATE .
    IF SY-SUBRC <> 0.   "insert preprocessing: init WA
      CLEAR ZTSFLIGHT_A20.
    ENDIF.
ZTSFLIGHT_A20-MANDT =
ZVSA20SFLIGHT-MANDT .
ZTSFLIGHT_A20-CARRID =
ZVSA20SFLIGHT-CARRID .
ZTSFLIGHT_A20-CONNID =
ZVSA20SFLIGHT-CONNID .
ZTSFLIGHT_A20-FLDATE =
ZVSA20SFLIGHT-FLDATE .
ZTSFLIGHT_A20-PRICE =
ZVSA20SFLIGHT-PRICE .
ZTSFLIGHT_A20-CURRENCY =
ZVSA20SFLIGHT-CURRENCY .
ZTSFLIGHT_A20-PLANETYPE =
ZVSA20SFLIGHT-PLANETYPE .
ZTSFLIGHT_A20-SEATSMAX =
ZVSA20SFLIGHT-SEATSMAX .
ZTSFLIGHT_A20-SEATSOCC =
ZVSA20SFLIGHT-SEATSOCC .
ZTSFLIGHT_A20-PAYMENTSUM =
ZVSA20SFLIGHT-PAYMENTSUM .
ZTSFLIGHT_A20-SEATSMAX_B =
ZVSA20SFLIGHT-SEATSMAX_B .
ZTSFLIGHT_A20-SEATSOCC_B =
ZVSA20SFLIGHT-SEATSOCC_B .
ZTSFLIGHT_A20-SEATSMAX_F =
ZVSA20SFLIGHT-SEATSMAX_F .
ZTSFLIGHT_A20-SEATSOCC_F =
ZVSA20SFLIGHT-SEATSOCC_F .
    IF SY-SUBRC = 0.
    UPDATE ZTSFLIGHT_A20 ##WARN_OK.
    ELSE.
    INSERT ZTSFLIGHT_A20 .
    ENDIF.
    READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
    IF SY-SUBRC EQ 0.
      <XACT> = ORIGINAL.
      MODIFY EXTRACT INDEX SY-TABIX.
    ENDIF.
    <ACTION> = ORIGINAL.
    MODIFY TOTAL.
  ENDCASE.
ENDLOOP.
CLEAR: STATUS_ZVSA20SFLIGHT-UPD_FLAG,
STATUS_ZVSA20SFLIGHT-UPD_CHECKD.
MESSAGE S018(SV).
ENDFORM.
*---------------------------------------------------------------------*
FORM READ_SINGLE_ZVSA20SFLIGHT.
  SELECT SINGLE * FROM ZTSFLIGHT_A20 WHERE
CARRID = ZVSA20SFLIGHT-CARRID AND
CONNID = ZVSA20SFLIGHT-CONNID AND
FLDATE = ZVSA20SFLIGHT-FLDATE .
ZVSA20SFLIGHT-MANDT =
ZTSFLIGHT_A20-MANDT .
ZVSA20SFLIGHT-CARRID =
ZTSFLIGHT_A20-CARRID .
ZVSA20SFLIGHT-CONNID =
ZTSFLIGHT_A20-CONNID .
ZVSA20SFLIGHT-FLDATE =
ZTSFLIGHT_A20-FLDATE .
ZVSA20SFLIGHT-PRICE =
ZTSFLIGHT_A20-PRICE .
ZVSA20SFLIGHT-CURRENCY =
ZTSFLIGHT_A20-CURRENCY .
ZVSA20SFLIGHT-PLANETYPE =
ZTSFLIGHT_A20-PLANETYPE .
ZVSA20SFLIGHT-SEATSMAX =
ZTSFLIGHT_A20-SEATSMAX .
ZVSA20SFLIGHT-SEATSOCC =
ZTSFLIGHT_A20-SEATSOCC .
ZVSA20SFLIGHT-PAYMENTSUM =
ZTSFLIGHT_A20-PAYMENTSUM .
ZVSA20SFLIGHT-SEATSMAX_B =
ZTSFLIGHT_A20-SEATSMAX_B .
ZVSA20SFLIGHT-SEATSOCC_B =
ZTSFLIGHT_A20-SEATSOCC_B .
ZVSA20SFLIGHT-SEATSMAX_F =
ZTSFLIGHT_A20-SEATSMAX_F .
ZVSA20SFLIGHT-SEATSOCC_F =
ZTSFLIGHT_A20-SEATSOCC_F .
ENDFORM.
*---------------------------------------------------------------------*
FORM CORR_MAINT_ZVSA20SFLIGHT USING VALUE(CM_ACTION) RC.
  DATA: RETCODE LIKE SY-SUBRC, COUNT TYPE I, TRSP_KEYLEN TYPE SYFLENG.
  FIELD-SYMBOLS: <TAB_KEY_X> TYPE X.
  CLEAR RC.
MOVE ZVSA20SFLIGHT-CARRID TO
ZTSFLIGHT_A20-CARRID .
MOVE ZVSA20SFLIGHT-CONNID TO
ZTSFLIGHT_A20-CONNID .
MOVE ZVSA20SFLIGHT-FLDATE TO
ZTSFLIGHT_A20-FLDATE .
MOVE ZVSA20SFLIGHT-MANDT TO
ZTSFLIGHT_A20-MANDT .
  CORR_KEYTAB             =  E071K.
  CORR_KEYTAB-OBJNAME     = 'ZTSFLIGHT_A20'.
  IF NOT <vim_corr_keyx> IS ASSIGNED.
    ASSIGN CORR_KEYTAB-TABKEY TO <vim_corr_keyx> CASTING.
  ENDIF.
  ASSIGN ZTSFLIGHT_A20 TO <TAB_KEY_X> CASTING.
  PERFORM VIM_GET_TRSPKEYLEN
    USING 'ZTSFLIGHT_A20'
    CHANGING TRSP_KEYLEN.
  <VIM_CORR_KEYX>(TRSP_KEYLEN) = <TAB_KEY_X>(TRSP_KEYLEN).
  PERFORM UPDATE_CORR_KEYTAB USING CM_ACTION RETCODE.
  ADD: RETCODE TO RC, 1 TO COUNT.
  IF RC LT COUNT AND CM_ACTION NE PRUEFEN.
    CLEAR RC.
  ENDIF.

ENDFORM.
*---------------------------------------------------------------------*
*...processing: ZVSA20SPFLI.....................................*
FORM GET_DATA_ZVSA20SPFLI.
  PERFORM VIM_FILL_WHERETAB.
*.read data from database.............................................*
  REFRESH TOTAL.
  CLEAR   TOTAL.
  SELECT * FROM ZTSPFLI_A20 WHERE
(VIM_WHERETAB) .
    CLEAR ZVSA20SPFLI .
ZVSA20SPFLI-MANDT =
ZTSPFLI_A20-MANDT .
ZVSA20SPFLI-CARRID =
ZTSPFLI_A20-CARRID .
ZVSA20SPFLI-CONNID =
ZTSPFLI_A20-CONNID .
ZVSA20SPFLI-COUNTRYFR =
ZTSPFLI_A20-COUNTRYFR .
ZVSA20SPFLI-CITYFROM =
ZTSPFLI_A20-CITYFROM .
ZVSA20SPFLI-AIRPFROM =
ZTSPFLI_A20-AIRPFROM .
ZVSA20SPFLI-COUNTRYTO =
ZTSPFLI_A20-COUNTRYTO .
ZVSA20SPFLI-CITYTO =
ZTSPFLI_A20-CITYTO .
ZVSA20SPFLI-AIRPTO =
ZTSPFLI_A20-AIRPTO .
ZVSA20SPFLI-FLTIME =
ZTSPFLI_A20-FLTIME .
ZVSA20SPFLI-DEPTIME =
ZTSPFLI_A20-DEPTIME .
ZVSA20SPFLI-ARRTIME =
ZTSPFLI_A20-ARRTIME .
ZVSA20SPFLI-DISTANCE =
ZTSPFLI_A20-DISTANCE .
ZVSA20SPFLI-DISTID =
ZTSPFLI_A20-DISTID .
ZVSA20SPFLI-FLTYPE =
ZTSPFLI_A20-FLTYPE .
ZVSA20SPFLI-PERIOD =
ZTSPFLI_A20-PERIOD .
<VIM_TOTAL_STRUC> = ZVSA20SPFLI.
    APPEND TOTAL.
  ENDSELECT.
  SORT TOTAL BY <VIM_XTOTAL_KEY>.
  <STATUS>-ALR_SORTED = 'R'.
*.check dynamic selectoptions (not in DDIC)...........................*
  IF X_HEADER-SELECTION NE SPACE.
    PERFORM CHECK_DYNAMIC_SELECT_OPTIONS.
  ELSEIF X_HEADER-DELMDTFLAG NE SPACE.
    PERFORM BUILD_MAINKEY_TAB.
  ENDIF.
  REFRESH EXTRACT.
ENDFORM.
*---------------------------------------------------------------------*
FORM DB_UPD_ZVSA20SPFLI .
*.process data base updates/inserts/deletes.........................*
LOOP AT TOTAL.
  CHECK <ACTION> NE ORIGINAL.
MOVE <VIM_TOTAL_STRUC> TO ZVSA20SPFLI.
  IF <ACTION> = UPDATE_GELOESCHT.
    <ACTION> = GELOESCHT.
  ENDIF.
  CASE <ACTION>.
   WHEN NEUER_GELOESCHT.
IF STATUS_ZVSA20SPFLI-ST_DELETE EQ GELOESCHT.
     READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
     IF SY-SUBRC EQ 0.
       DELETE EXTRACT INDEX SY-TABIX.
     ENDIF.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN GELOESCHT.
  SELECT SINGLE FOR UPDATE * FROM ZTSPFLI_A20 WHERE
  CARRID = ZVSA20SPFLI-CARRID AND
  CONNID = ZVSA20SPFLI-CONNID .
    IF SY-SUBRC = 0.
    DELETE ZTSPFLI_A20 .
    ENDIF.
    IF STATUS-DELETE EQ GELOESCHT.
      READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY> BINARY SEARCH.
      DELETE EXTRACT INDEX SY-TABIX.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN OTHERS.
  SELECT SINGLE FOR UPDATE * FROM ZTSPFLI_A20 WHERE
  CARRID = ZVSA20SPFLI-CARRID AND
  CONNID = ZVSA20SPFLI-CONNID .
    IF SY-SUBRC <> 0.   "insert preprocessing: init WA
      CLEAR ZTSPFLI_A20.
    ENDIF.
ZTSPFLI_A20-MANDT =
ZVSA20SPFLI-MANDT .
ZTSPFLI_A20-CARRID =
ZVSA20SPFLI-CARRID .
ZTSPFLI_A20-CONNID =
ZVSA20SPFLI-CONNID .
ZTSPFLI_A20-COUNTRYFR =
ZVSA20SPFLI-COUNTRYFR .
ZTSPFLI_A20-CITYFROM =
ZVSA20SPFLI-CITYFROM .
ZTSPFLI_A20-AIRPFROM =
ZVSA20SPFLI-AIRPFROM .
ZTSPFLI_A20-COUNTRYTO =
ZVSA20SPFLI-COUNTRYTO .
ZTSPFLI_A20-CITYTO =
ZVSA20SPFLI-CITYTO .
ZTSPFLI_A20-AIRPTO =
ZVSA20SPFLI-AIRPTO .
ZTSPFLI_A20-FLTIME =
ZVSA20SPFLI-FLTIME .
ZTSPFLI_A20-DEPTIME =
ZVSA20SPFLI-DEPTIME .
ZTSPFLI_A20-ARRTIME =
ZVSA20SPFLI-ARRTIME .
ZTSPFLI_A20-DISTANCE =
ZVSA20SPFLI-DISTANCE .
ZTSPFLI_A20-DISTID =
ZVSA20SPFLI-DISTID .
ZTSPFLI_A20-FLTYPE =
ZVSA20SPFLI-FLTYPE .
ZTSPFLI_A20-PERIOD =
ZVSA20SPFLI-PERIOD .
    IF SY-SUBRC = 0.
    UPDATE ZTSPFLI_A20 ##WARN_OK.
    ELSE.
    INSERT ZTSPFLI_A20 .
    ENDIF.
    READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
    IF SY-SUBRC EQ 0.
      <XACT> = ORIGINAL.
      MODIFY EXTRACT INDEX SY-TABIX.
    ENDIF.
    <ACTION> = ORIGINAL.
    MODIFY TOTAL.
  ENDCASE.
ENDLOOP.
CLEAR: STATUS_ZVSA20SPFLI-UPD_FLAG,
STATUS_ZVSA20SPFLI-UPD_CHECKD.
MESSAGE S018(SV).
ENDFORM.
*---------------------------------------------------------------------*
FORM READ_SINGLE_ZVSA20SPFLI.
  SELECT SINGLE * FROM ZTSPFLI_A20 WHERE
CARRID = ZVSA20SPFLI-CARRID AND
CONNID = ZVSA20SPFLI-CONNID .
ZVSA20SPFLI-MANDT =
ZTSPFLI_A20-MANDT .
ZVSA20SPFLI-CARRID =
ZTSPFLI_A20-CARRID .
ZVSA20SPFLI-CONNID =
ZTSPFLI_A20-CONNID .
ZVSA20SPFLI-COUNTRYFR =
ZTSPFLI_A20-COUNTRYFR .
ZVSA20SPFLI-CITYFROM =
ZTSPFLI_A20-CITYFROM .
ZVSA20SPFLI-AIRPFROM =
ZTSPFLI_A20-AIRPFROM .
ZVSA20SPFLI-COUNTRYTO =
ZTSPFLI_A20-COUNTRYTO .
ZVSA20SPFLI-CITYTO =
ZTSPFLI_A20-CITYTO .
ZVSA20SPFLI-AIRPTO =
ZTSPFLI_A20-AIRPTO .
ZVSA20SPFLI-FLTIME =
ZTSPFLI_A20-FLTIME .
ZVSA20SPFLI-DEPTIME =
ZTSPFLI_A20-DEPTIME .
ZVSA20SPFLI-ARRTIME =
ZTSPFLI_A20-ARRTIME .
ZVSA20SPFLI-DISTANCE =
ZTSPFLI_A20-DISTANCE .
ZVSA20SPFLI-DISTID =
ZTSPFLI_A20-DISTID .
ZVSA20SPFLI-FLTYPE =
ZTSPFLI_A20-FLTYPE .
ZVSA20SPFLI-PERIOD =
ZTSPFLI_A20-PERIOD .
ENDFORM.
*---------------------------------------------------------------------*
FORM CORR_MAINT_ZVSA20SPFLI USING VALUE(CM_ACTION) RC.
  DATA: RETCODE LIKE SY-SUBRC, COUNT TYPE I, TRSP_KEYLEN TYPE SYFLENG.
  FIELD-SYMBOLS: <TAB_KEY_X> TYPE X.
  CLEAR RC.
MOVE ZVSA20SPFLI-CARRID TO
ZTSPFLI_A20-CARRID .
MOVE ZVSA20SPFLI-CONNID TO
ZTSPFLI_A20-CONNID .
MOVE ZVSA20SPFLI-MANDT TO
ZTSPFLI_A20-MANDT .
  CORR_KEYTAB             =  E071K.
  CORR_KEYTAB-OBJNAME     = 'ZTSPFLI_A20'.
  IF NOT <vim_corr_keyx> IS ASSIGNED.
    ASSIGN CORR_KEYTAB-TABKEY TO <vim_corr_keyx> CASTING.
  ENDIF.
  ASSIGN ZTSPFLI_A20 TO <TAB_KEY_X> CASTING.
  PERFORM VIM_GET_TRSPKEYLEN
    USING 'ZTSPFLI_A20'
    CHANGING TRSP_KEYLEN.
  <VIM_CORR_KEYX>(TRSP_KEYLEN) = <TAB_KEY_X>(TRSP_KEYLEN).
  PERFORM UPDATE_CORR_KEYTAB USING CM_ACTION RETCODE.
  ADD: RETCODE TO RC, 1 TO COUNT.
  IF RC LT COUNT AND CM_ACTION NE PRUEFEN.
    CLEAR RC.
  ENDIF.

ENDFORM.
*---------------------------------------------------------------------*
